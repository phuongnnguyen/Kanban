{"version":3,"sources":["components/Card.js","components/List.js","components/KanbanBoard.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","_ref","isDragging","dragSource","text","_useState","useState","_useState2","Object","slicedToArray","active","setActive","_useState3","_useState4","paint","setPaint","_useState5","_useState6","color","setColor","getPaint","e","target","id","react_default","a","createElement","className","onClick","style","backgroundColor","title","taskDone","edit","status","moveLeft","moveRight","List","cards","map","card","components_Card","key","inputRef","useRef","setTitle","todoId","setTodoId","ref","onChange","current","value","type","trim","addTodo","KanbanBoard","components_List","filter","findItem","App","cardsList","setCardsList","find","components_KanbanBoard","todo","concat","toConsumableArray","tempList","item","newTask","prompt","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea56ec99.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nconst Card = ( props, { isDragging, dragSource, text } ) => {\r\n    \r\n    const [active, setActive] = useState(false);\r\n    const [paint, setPaint] = useState(false);\r\n    let [color, setColor] = useState();\r\n    function toggle() {\r\n        active ? setActive(false) : setActive(true)\r\n    }\r\n    function togglePaint() {\r\n        paint ? setPaint(false) : setPaint(true)\r\n    }\r\n    function getPaint(e) {\r\n        color = e.target.id;\r\n        setColor(color);\r\n    }\r\n    return (\r\n    <div>\r\n        {paint ? (<div id=\"paint\" className=\"w3-padding-32 w3-card-2\">\r\n            <div className=\"w3-row-padding section\">\r\n                <div className=\"w3-quarter w3-pink w3-btn circle\" id=\"#e91e63\" onClick={e => getPaint(e)}></div>\r\n                <div className=\"w3-quarter w3-blue w3-btn circle\" id=\"#2196F3\" onClick={e => getPaint(e)}></div>\r\n                <div className=\"w3-quarter w3-green w3-btn circle\" id=\"#4CAF50\" onClick={e => getPaint(e)}></div>\r\n                <div className=\"w3-quarter w3-black w3-btn circle\" id=\"#000\" onClick={e => getPaint(e)}></div>\r\n            </div>\r\n            <div className=\"w3-row-padding section\">\r\n                <div className=\"w3-quarter w3-yellow w3-btn circle\" id=\"#cddc39\" onClick={e => getPaint(e)}></div>\r\n                <div className=\"w3-quarter w3-brown w3-btn circle\" id=\"#795548\" onClick={e => getPaint(e)}></div>\r\n                <div className=\"w3-quarter w3-purple w3-btn circle\" id=\"#673ab7\" onClick={e => getPaint(e)}></div>\r\n                <div className=\"w3-quarter w3-teal w3-btn circle\"id=\"#009688\" onClick={e => getPaint(e)}></div>\r\n            </div>\r\n        </div>) : null}\r\n        \r\n        <div className=\"w3-padding w3-card-2 w3-margin-bottom fakeButton\" style={{backgroundColor: color}}>\r\n            <p onClick={toggle}>{props.title}</p>\r\n            <div id=\"kbTool\" className={active ? \"w3-animate-zoom w3-border-top\" : \"w3-hide\"}>\r\n                <span className=\"w3-btn w3-round-large\"><i className=\"fa fa-bars\"></i></span>\r\n                <span className=\"w3-btn w3-round-large\" onClick={togglePaint}><i className=\"fa fa-paint-brush\"></i></span>\r\n                <span className=\"w3-btn w3-round-large\" onClick={() => props.taskDone(props.id)}><i className=\"fa fa-trash\"></i></span>\r\n                <span className=\"w3-btn w3-round-large\" onClick={() => props.edit(props.id)}><i className=\"fa fa-pencil\"></i></span>\r\n                {(props.status === \"doing\" || props.status === \"done\") ? <span className=\"w3-btn w3-round-large\" onClick={() => props.moveLeft(props.id)}><i className=\"fa fa-arrow-left\"></i></span> : null}\r\n                {(props.status === \"todo\" || props.status === \"doing\") ? <span className=\"w3-btn w3-round-large\" onClick={() => props.moveRight(props.id)}><i className=\"fa fa-arrow-right\"></i></span> : null}\r\n                {(props.status === \"done\") ? <span className=\"w3-btn w3-round-large\" onClick={() => props.taskDone(props.id)}><i className=\"fa fa-list-alt\"></i></span> : null}\r\n            </div>\r\n        </div>\r\n    </div>\r\n)}\r\n\r\nexport default Card","import React, {useState, useRef} from 'react'\r\nimport Card from './Card'\r\nconst List = props => {\r\n    let cards = props.cards.map(\r\n        card => <Card key={card.id} \r\n                      id={card.id} \r\n                      title={card.title} \r\n                      status={card.status}\r\n                      moveRight={props.moveRight}\r\n                      moveLeft={props.moveLeft}\r\n                      taskDone={props.taskDone}\r\n                      edit={props.edit}\r\n                />\r\n            )\r\n    let inputRef = useRef();\r\n    const [active, setActive] = useState(false);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [todoId, setTodoId] = useState(0);\r\n    function toggle() {\r\n        active ? setActive(false) : setActive(true)\r\n    }\r\n    function AddTodo() {\r\n        if(title.trim() === \"\")\r\n            return;\r\n        setTodoId(() => todoId + 1)\r\n        props.addTodo({id: todoId,title, status: \"todo\"});\r\n        setTitle(\"\");\r\n        setActive(false);\r\n    }\r\n    return(\r\n        <div className=\"w3-third\">\r\n            <div className=\"w3-center w3-padding-32 w3-black w3-card-4\">\r\n                {props.title} {\"  \"}\r\n                {\r\n                    props.title === \"Todo\" \r\n                        ? <span className=\"w3-text-green fakeButton\" onClick={toggle}>\r\n                            <i className=\"fa fa-plus\"></i>\r\n                          </span> \r\n                        : null\r\n                }\r\n                {active ? <div><input ref={inputRef} onChange={() => setTitle(inputRef.current.value)} type=\"text\"/><button onClick={AddTodo}>Add Todo</button></div> : null}\r\n            </div>\r\n            {cards}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List","import React from 'react'\r\nimport List from './List'\r\nconst KanbanBoard = props => {\r\n\r\n    return(\r\n    <div>\r\n        <div className=\"w3-row-padding\">\r\n            <List id=\"todo\" \r\n                  title=\"Todo\" \r\n                  addTodo={props.addTodo} \r\n                  cards={props.cards.filter(card => card.status === \"todo\")}\r\n                  moveRight={props.moveRight}\r\n                  taskDone={props.taskDone}\r\n                  edit={props.edit}\r\n            />\r\n            <List id=\"doing\" \r\n                  title=\"Doing\" \r\n                  cards={props.cards.filter(card => card.status === \"doing\")}\r\n                  moveRight={props.moveRight}\r\n                  moveLeft={props.moveLeft}\r\n                  taskDone={props.taskDone}\r\n                  edit={props.edit}\r\n            />\r\n            <List id=\"done\" \r\n                  title=\"Done\" \r\n                  cards={props.cards.filter(card => card.status === \"done\")}\r\n                  findItem={props.findItem}\r\n                  moveLeft={props.moveLeft}\r\n                  taskDone={props.taskDone}\r\n                  edit={props.edit}\r\n            />\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default KanbanBoard","import React, {useState} from 'react'\nimport KanbanBoard from './components/KanbanBoard'\nimport './w3.css'\nimport './font/css/font-awesome.min.css'\n\nconst App = props => {\n  const [cardsList, setCardsList] = useState([])\n  function addTodo(todo) {\n    setCardsList([...cardsList, todo])\n  }\n  function findItem(id) {\n    return cardsList.find(card => card.id === id);\n  }\n  function moveRight(id) {\n    const tempList = [...cardsList];\n    let item = findItem(id);\n    if(item.status === \"todo\")\n      item.status = \"doing\";\n    else if(item.status === \"doing\")\n      item.status = \"done\";\n    setCardsList(tempList);\n  }\n  function moveLeft(id) {\n    const tempList = [...cardsList];\n    let item = findItem(id);\n    if(item.status === \"done\")\n      item.status = \"doing\";\n    else if(item.status === \"doing\")\n      item.status = \"todo\";\n    setCardsList(tempList);\n  }\n  function taskDone(id) {\n    let tempList = [...cardsList];\n    tempList = tempList.filter(card => card.id !== id)\n    setCardsList(tempList);\n  }\n  function edit(id) {\n    const tempList = [...cardsList];\n    let item = findItem(id);\n    const newTask = prompt();\n    item.title = newTask;\n    setCardsList(tempList);\n  }\n  return(\n    <KanbanBoard cards={cardsList}  \n                 addTodo={addTodo}\n                 moveRight={moveRight}\n                 moveLeft={moveLeft}\n                 taskDone={taskDone}\n                 edit={edit}\n    />\n  )\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}